

+*In[10]:*+
[source, ipython3]
----
import numpy as np
import matplotlib.pyplot as plt

from svg.path import parse_path
from svg.path.path import Line
from xml.dom import minidom

def line_splitter(start, end):
    return (lambda t: (1-t)*start+t*end)

def cubic_bezier_converter(start, control1, control2, end):
    original_data = np.array([start, control1, control2, end])
    cubic_bezier_matrix = np.array([
        [-1,  3, -3,  1],
        [ 3, -6,  3,  0],
        [-3,  3,  0,  0],
        [ 1,  0,  0,  0]
    ])
    return_data = cubic_bezier_matrix.dot(original_data)

    return (lambda t: np.array([t**3, t**2, t, 1]).dot(return_data))

# Learned from
# https://stackoverflow.com/questions/36971363/how-to-interpolate-svg-path-into-a-pixel-coordinates-not-simply-raster-in-pyth


doc = minidom.parse('LaneMap2.svg')
path_strings = [path.getAttribute('d') for path
                in doc.getElementsByTagName('path')]
doc.unlink()

points_np_all=[]
points_np_all=np.empty((len(path_strings)),dtype=object)
print(len(points_np_all))
#points_np_all[k]=np.array([])

for k in range(len(path_strings)):
#for path_string in path_strings:
    path = parse_path(path_strings[k])
    points_np_merge=np.empty((0,2), float)
    #points_np_merge=np.empty(points_np_merge)
    for dat in path:

#path=parse_path(path_strings[block])

#dat=path[key]

        if type(dat).__name__=='CubicBezier':
            start_np = np.array([dat.start.real, dat.start.imag])
            control1_np = np.array([dat.control1.real, dat.control1.imag])
            control2_np = np.array([dat.control2.real, dat.control2.imag])
            end_np = np.array([dat.end.real, dat.end.imag])
            converted_curve = cubic_bezier_converter(start_np, control1_np, control2_np, end_np)
            # 
            diff_np=start_np-end_np
            n_dots=np.round(np.linalg.norm(diff_np))
            # 
            points_np = np.array([converted_curve(t) for t in np.linspace(0, 1, n_dots)])
        elif type(dat).__name__=='Line':
            start_np = np.array([dat.start.real, dat.start.imag])
            end_np = np.array([dat.end.real, dat.end.imag])
            converted_line = line_splitter(start_np,end_np)
            # 
            diff_np=start_np-end_np
            n_dots=np.round(np.linalg.norm(diff_np))
            #     
            points_np=np.array([converted_line(t) for t in np.linspace(0, 1, n_dots)])
        elif type(dat).__name__=='Move':
            # 
            n_dots=1
            # 
            start_np = np.array([dat.start.real, dat.start.imag])
            end_np = np.array([dat.end.real, dat.end.imag])
            points_np = np.array([start_np,end_np])
        else:
            points_np=np.array([])
        #points_np_merge=np.concatenate(points_np_merge,points_np)
        points_np_merge=np.append(points_np_merge, points_np, axis=0)
#         if k==0:
#             points_np_merge=points_np
#         else:
#             points_np_merge=np.append(points_np_merge,points_np,axis=0)
        #plt.plot(points_np[:, 0], points_np[:, 1], '.-')
        #plt.show()
        #print(len(points_np))
        #print(len(points_np_merge))
    #points_np_all1=points_np_all1.append(points_np_merge)
    #points_np_all=points_np_merge
    points_np_all[k]= points_np_merge
#     points_np_all=points_np_all.append(points_np_merge)
    #print(len(points_np_all))
    print(' %d : %d dots' % (k,len(points_np_merge)))
    #plt.plot(points_np_merge[:, 0], points_np_merge[:, 1], '.-')
    #plt.show()


len(points_np_all)

len(points_np_all)
for k in range(len(points_np_all)):
    points_np=points_np_all[k]
    plt.plot(points_np[:, 0], points_np[:, 1], '.-')
plt.show()
    
----


+*Out[10]:*+
----
4
 0 : 202 dots
 1 : 117 dots
 2 : 126 dots
 3 : 126 dots

![png](1_SVG_converter_Silver_files/1_SVG_converter_Silver_0_1.png)
----


+*In[20]:*+
[source, ipython3]
----
import pandas as pd
# points_np.to_csv('to_csv_out_columns.csv')

df = pd.DataFrame({'x1': points_np[:,0],'y1': points_np[:,1],
                   'x2': points_np[:,0],'y2': points_np[:,1],
                   'x3': points_np[:,0],'y3': points_np[:,1],})
print(df)
df.to_csv('to_csv_out_columns.csv')
----


+*Out[20]:*+
----
             x1          y1          x2          y2          x3          y3
0     72.000000  108.000000   72.000000  108.000000   72.000000  108.000000
1     72.000000  108.000000   72.000000  108.000000   72.000000  108.000000
2     72.000000  108.000000   72.000000  108.000000   72.000000  108.000000
3     73.014085  108.000000   73.014085  108.000000   73.014085  108.000000
4     74.028169  108.000000   74.028169  108.000000   74.028169  108.000000
..          ...         ...         ...         ...         ...         ...
121  179.569803  140.516129  179.569803  140.516129  179.569803  140.516129
122  179.755295  141.387097  179.755295  141.387097  179.755295  141.387097
123  179.890034  142.258065  179.890034  142.258065  179.890034  142.258065
124  179.972206  143.129032  179.972206  143.129032  179.972206  143.129032
125  180.000000  144.000000  180.000000  144.000000  180.000000  144.000000

[126 rows x 6 columns]
----


+*In[15]:*+
[source, ipython3]
----
len(points_np)
----


+*Out[15]:*+
----126----


+*In[34]:*+
[source, ipython3]
----
data={'x1': points_np[:,0],'y1': points_np[:,1]}
data=data.append({'x1': points_np[:,0],'y1': points_np[:,1]})
# data=data.append({'x1': points_np[:,0],'y1': points_np[:,1]})

merge_df = pd.DataFrame([], columns=merge_df.keys())

for k in range(len(points_np_all)):
    points_np=points_np_all[k]

    merge_df = merge_df.append('x1': points_np[:,0], ignore_index=True)

----


+*Out[34]:*+
----

      File "<ipython-input-34-47be6a1e5b6b>", line 10
        merge_df = merge_df.append('x1': points_np[:,0], ignore_index=True)
                                       ^
    SyntaxError: invalid syntax


----


+*In[47]:*+
[source, ipython3]
----
from time import time
import pandas as pd

len(data)
label=[]
for k in range(len(points_np_all)):
    label=label.append('x1','y1')

dat_df = pd.DataFrame([],columns=['x1', 'y1'])
dat_df[0]={'x1': points_np[:,0],'y1': points_np[:,1]}
dat_df[1]={'x1': points_np[:,0],'y1': points_np[:,1]}
# data=data.append({'x1': points_np[:,0],'y1': points_np[:,1]})
dat_df[1]
----


+*Out[47]:*+
----x1    x1
y1    y1
Name: 1, dtype: object----


+*In[76]:*+
[source, ipython3]
----
label=np.empty([],dtype='unicode')
print(label.size)
label=[]
for k in range(len(points_np_all)): 
    xlabel="x%d"%(k+1)
    ylabel="y%d"%(k+1)
#     label=np.append(label,['x1','y1'])
    label=np.append(label,[xlabel,ylabel])
dat_df = pd.DataFrame([],columns=label)
for k in range(len(points_np_all)):
    points_np=points_np_all[k]
    dat_df[0]={'x1': points_np[:,0],'y1': points_np[:,1]}
#     label=np.append(label,'y1')
----


+*Out[76]:*+
----
1
----


+*In[205]:*+
[source, ipython3]
----
label=np.empty([],dtype='unicode')
print("label size = %d" % (label.size))
label=[]
for k in range(len(points_np_all)): 
    label=np.append(label,["x%d"%(k+1),"y%d"%(k+1)])
dat_df = pd.DataFrame([],columns=label)
for k in range(len(points_np_all)):
    points_np=points_np_all[k]
    print("%d: size = %d (length= %d)(shape= %s)" %(k,points_np.size,len(points_np),(points_np.shape)))
    #dat_df[0]={'x1': points_np[:,0],'y1': points_np[:,1]}
#     label=np.append(label,'y1')
----


+*Out[205]:*+
----
label size = 1
0: size = 404 (length= 202)(shape= (202, 2))
1: size = 234 (length= 117)(shape= (117, 2))
2: size = 252 (length= 126)(shape= (126, 2))
3: size = 252 (length= 126)(shape= (126, 2))
----


+*In[225]:*+
[source, ipython3]
----
maxL=max(len(points_np_all[k]) for k in range(len(points_np_all)))
print(maxL)
k=0
points_np=points_np_all[2]
g0=np.zeros([202,2])
tmp0=np.zeros([maxL,2])

print(len(g0))
print((g0.shape))
print(points_np.shape[0])
g0[0:126,:]=points_np
tmp0[0:points_np.shape[0],:]=points_np
print(len(tmp0))
print((tmp0.shape))
dat_df = pd.DataFrame([],columns=label)
dat_df["x1"]=tmp0[:,0]
dat_df["y1"]=tmp0[:,1]
dat_df
# tempdict={'x1':points_np_all[0][:,0],'y1':points_np_all[0][:,1],'x2':points_np_all[1][:,0],'y2':points_np_all[1][:,1],'x3':points_np_all[2][:,0],'y3':points_np_all[2][:,1],'x4':points_np_all[3][:,0],'y4':points_np_all[1][:,1]}
dat_df
# g2
# pd.DataFrame((2,3))
----


+*Out[225]:*+
----
202
202
(202, 2)
126
202
(202, 2)

[cols=",,,,,,,,",options="header",]
|===
| |x1 |y1 |x2 |y2 |x3 |y3 |x4 |y4
|0 |180.000000 |126.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|1 |180.000000 |126.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|2 |180.000000 |126.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|3 |179.972206 |125.129032 |NaN |NaN |NaN |NaN |NaN |NaN
|4 |179.890034 |124.258065 |NaN |NaN |NaN |NaN |NaN |NaN
|5 |179.755295 |123.387097 |NaN |NaN |NaN |NaN |NaN |NaN
|6 |179.569803 |122.516129 |NaN |NaN |NaN |NaN |NaN |NaN
|7 |179.335370 |121.645161 |NaN |NaN |NaN |NaN |NaN |NaN
|8 |179.053808 |120.774194 |NaN |NaN |NaN |NaN |NaN |NaN
|9 |178.726931 |119.903226 |NaN |NaN |NaN |NaN |NaN |NaN
|10 |178.356551 |119.032258 |NaN |NaN |NaN |NaN |NaN |NaN
|11 |177.944480 |118.161290 |NaN |NaN |NaN |NaN |NaN |NaN
|12 |177.492531 |117.290323 |NaN |NaN |NaN |NaN |NaN |NaN
|13 |177.002518 |116.419355 |NaN |NaN |NaN |NaN |NaN |NaN
|14 |176.476251 |115.548387 |NaN |NaN |NaN |NaN |NaN |NaN
|15 |175.915545 |114.677419 |NaN |NaN |NaN |NaN |NaN |NaN
|16 |175.322211 |113.806452 |NaN |NaN |NaN |NaN |NaN |NaN
|17 |174.698063 |112.935484 |NaN |NaN |NaN |NaN |NaN |NaN
|18 |174.044913 |112.064516 |NaN |NaN |NaN |NaN |NaN |NaN
|19 |173.364573 |111.193548 |NaN |NaN |NaN |NaN |NaN |NaN
|20 |172.658857 |110.322581 |NaN |NaN |NaN |NaN |NaN |NaN
|21 |171.929576 |109.451613 |NaN |NaN |NaN |NaN |NaN |NaN
|22 |171.178544 |108.580645 |NaN |NaN |NaN |NaN |NaN |NaN
|23 |170.407573 |107.709677 |NaN |NaN |NaN |NaN |NaN |NaN
|24 |169.618475 |106.838710 |NaN |NaN |NaN |NaN |NaN |NaN
|25 |168.813064 |105.967742 |NaN |NaN |NaN |NaN |NaN |NaN
|26 |167.993152 |105.096774 |NaN |NaN |NaN |NaN |NaN |NaN
|27 |167.160552 |104.225806 |NaN |NaN |NaN |NaN |NaN |NaN
|28 |166.317076 |103.354839 |NaN |NaN |NaN |NaN |NaN |NaN
|29 |165.464536 |102.483871 |NaN |NaN |NaN |NaN |NaN |NaN
|... |... |... |... |... |... |... |... |...
|172 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|173 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|174 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|175 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|176 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|177 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|178 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|179 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|180 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|181 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|182 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|183 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|184 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|185 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|186 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|187 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|188 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|189 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|190 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|191 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|192 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|193 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|194 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|195 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|196 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|197 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|198 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|199 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|200 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|201 |0.000000 |0.000000 |NaN |NaN |NaN |NaN |NaN |NaN
|===

202 rows × 8 columns
----


+*In[230]:*+
[source, ipython3]
----
maxL=max(len(points_np_all[k]) for k in range(len(points_np_all)))

label=np.empty([],dtype='unicode')
print("label size = %d" % (label.size))
label=[]
for k in range(len(points_np_all)): 
    label=np.append(label,["x%d"%(k+1),"y%d"%(k+1)])
dat_df = pd.DataFrame([],columns=label)
for k in range(len(points_np_all)):
    points_np=points_np_all[k]
    tmp0=np.zeros([maxL,2])
    tmp0[0:points_np.shape[0],:]=points_np
    dat_df["x%d"%(k+1)] = tmp0[:,0]
    dat_df["y%d"%(k+1)] = tmp0[:,1]
    
print(dat_df.shape)
dat_df
----


+*Out[230]:*+
----
label size = 1
(202, 8)

[cols=",,,,,,,,",options="header",]
|===
| |x1 |y1 |x2 |y2 |x3 |y3 |x4 |y4
|0 |72.000000 |54.000000 |72.000000 |72.0 |180.000000 |126.000000
|72.000000 |108.0

|1 |72.000000 |54.000000 |72.000000 |72.0 |180.000000 |126.000000
|72.000000 |108.0

|2 |72.000000 |54.000000 |72.000000 |72.0 |180.000000 |126.000000
|72.000000 |108.0

|3 |73.014085 |54.000000 |73.014085 |72.0 |179.972206 |125.129032
|73.014085 |108.0

|4 |74.028169 |54.000000 |74.028169 |72.0 |179.890034 |124.258065
|74.028169 |108.0

|5 |75.042254 |54.000000 |75.042254 |72.0 |179.755295 |123.387097
|75.042254 |108.0

|6 |76.056338 |54.000000 |76.056338 |72.0 |179.569803 |122.516129
|76.056338 |108.0

|7 |77.070423 |54.000000 |77.070423 |72.0 |179.335370 |121.645161
|77.070423 |108.0

|8 |78.084507 |54.000000 |78.084507 |72.0 |179.053808 |120.774194
|78.084507 |108.0

|9 |79.098592 |54.000000 |79.098592 |72.0 |178.726931 |119.903226
|79.098592 |108.0

|10 |80.112676 |54.000000 |80.112676 |72.0 |178.356551 |119.032258
|80.112676 |108.0

|11 |81.126761 |54.000000 |81.126761 |72.0 |177.944480 |118.161290
|81.126761 |108.0

|12 |82.140845 |54.000000 |82.140845 |72.0 |177.492531 |117.290323
|82.140845 |108.0

|13 |83.154930 |54.000000 |83.154930 |72.0 |177.002518 |116.419355
|83.154930 |108.0

|14 |84.169014 |54.000000 |84.169014 |72.0 |176.476251 |115.548387
|84.169014 |108.0

|15 |85.183099 |54.000000 |85.183099 |72.0 |175.915545 |114.677419
|85.183099 |108.0

|16 |86.197183 |54.000000 |86.197183 |72.0 |175.322211 |113.806452
|86.197183 |108.0

|17 |87.211268 |54.000000 |87.211268 |72.0 |174.698063 |112.935484
|87.211268 |108.0

|18 |88.225352 |54.000000 |88.225352 |72.0 |174.044913 |112.064516
|88.225352 |108.0

|19 |89.239437 |54.000000 |89.239437 |72.0 |173.364573 |111.193548
|89.239437 |108.0

|20 |90.253521 |54.000000 |90.253521 |72.0 |172.658857 |110.322581
|90.253521 |108.0

|21 |91.267606 |54.000000 |91.267606 |72.0 |171.929576 |109.451613
|91.267606 |108.0

|22 |92.281690 |54.000000 |92.281690 |72.0 |171.178544 |108.580645
|92.281690 |108.0

|23 |93.295775 |54.000000 |93.295775 |72.0 |170.407573 |107.709677
|93.295775 |108.0

|24 |94.309859 |54.000000 |94.309859 |72.0 |169.618475 |106.838710
|94.309859 |108.0

|25 |95.323944 |54.000000 |95.323944 |72.0 |168.813064 |105.967742
|95.323944 |108.0

|26 |96.338028 |54.000000 |96.338028 |72.0 |167.993152 |105.096774
|96.338028 |108.0

|27 |97.352113 |54.000000 |97.352113 |72.0 |167.160552 |104.225806
|97.352113 |108.0

|28 |98.366197 |54.000000 |98.366197 |72.0 |166.317076 |103.354839
|98.366197 |108.0

|29 |99.380282 |54.000000 |99.380282 |72.0 |165.464536 |102.483871
|99.380282 |108.0

|... |... |... |... |... |... |... |... |...

|172 |180.000000 |132.591549 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|173 |180.000000 |133.605634 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|174 |180.000000 |134.619718 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|175 |180.000000 |135.633803 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|176 |180.000000 |136.647887 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|177 |180.000000 |137.661972 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|178 |180.000000 |138.676056 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|179 |180.000000 |139.690141 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|180 |180.000000 |140.704225 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|181 |180.000000 |141.718310 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|182 |180.000000 |142.732394 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|183 |180.000000 |143.746479 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|184 |180.000000 |144.760563 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|185 |180.000000 |145.774648 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|186 |180.000000 |146.788732 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|187 |180.000000 |147.802817 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|188 |180.000000 |148.816901 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|189 |180.000000 |149.830986 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|190 |180.000000 |150.845070 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|191 |180.000000 |151.859155 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|192 |180.000000 |152.873239 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|193 |180.000000 |153.887324 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|194 |180.000000 |154.901408 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|195 |180.000000 |155.915493 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|196 |180.000000 |156.929577 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|197 |180.000000 |157.943662 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|198 |180.000000 |158.957746 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|199 |180.000000 |159.971831 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|200 |180.000000 |160.985915 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|201 |180.000000 |162.000000 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0
|===

202 rows × 8 columns
----


+*In[234]:*+
[source, ipython3]
----
dat_df.to_csv('to_csv.csv')
----


+*In[199]:*+
[source, ipython3]
----
tempdict={'x1':points_np_all[0][:,0],'y1':points_np_all[0][:,1],'x2':points_np_all[1][:,0],'y2':points_np_all[1][:,1],'x3':points_np_all[2][:,0],'y3':points_np_all[2][:,1],'x4':points_np_all[3][:,0],'y4':points_np_all[1][:,1]}
len(tempdict)
# tempdict
# pd.DataFrame(tempdict)
----


+*Out[199]:*+
----8----


+*In[77]:*+
[source, ipython3]
----
label

----


+*Out[77]:*+
----array(['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], dtype='<U32')----


+*In[232]:*+
[source, ipython3]
----
dat_df
----


+*Out[232]:*+
----
[cols=",,,,,,,,",options="header",]
|===
| |x1 |y1 |x2 |y2 |x3 |y3 |x4 |y4
|0 |72.000000 |54.000000 |72.000000 |72.0 |180.000000 |126.000000
|72.000000 |108.0

|1 |72.000000 |54.000000 |72.000000 |72.0 |180.000000 |126.000000
|72.000000 |108.0

|2 |72.000000 |54.000000 |72.000000 |72.0 |180.000000 |126.000000
|72.000000 |108.0

|3 |73.014085 |54.000000 |73.014085 |72.0 |179.972206 |125.129032
|73.014085 |108.0

|4 |74.028169 |54.000000 |74.028169 |72.0 |179.890034 |124.258065
|74.028169 |108.0

|5 |75.042254 |54.000000 |75.042254 |72.0 |179.755295 |123.387097
|75.042254 |108.0

|6 |76.056338 |54.000000 |76.056338 |72.0 |179.569803 |122.516129
|76.056338 |108.0

|7 |77.070423 |54.000000 |77.070423 |72.0 |179.335370 |121.645161
|77.070423 |108.0

|8 |78.084507 |54.000000 |78.084507 |72.0 |179.053808 |120.774194
|78.084507 |108.0

|9 |79.098592 |54.000000 |79.098592 |72.0 |178.726931 |119.903226
|79.098592 |108.0

|10 |80.112676 |54.000000 |80.112676 |72.0 |178.356551 |119.032258
|80.112676 |108.0

|11 |81.126761 |54.000000 |81.126761 |72.0 |177.944480 |118.161290
|81.126761 |108.0

|12 |82.140845 |54.000000 |82.140845 |72.0 |177.492531 |117.290323
|82.140845 |108.0

|13 |83.154930 |54.000000 |83.154930 |72.0 |177.002518 |116.419355
|83.154930 |108.0

|14 |84.169014 |54.000000 |84.169014 |72.0 |176.476251 |115.548387
|84.169014 |108.0

|15 |85.183099 |54.000000 |85.183099 |72.0 |175.915545 |114.677419
|85.183099 |108.0

|16 |86.197183 |54.000000 |86.197183 |72.0 |175.322211 |113.806452
|86.197183 |108.0

|17 |87.211268 |54.000000 |87.211268 |72.0 |174.698063 |112.935484
|87.211268 |108.0

|18 |88.225352 |54.000000 |88.225352 |72.0 |174.044913 |112.064516
|88.225352 |108.0

|19 |89.239437 |54.000000 |89.239437 |72.0 |173.364573 |111.193548
|89.239437 |108.0

|20 |90.253521 |54.000000 |90.253521 |72.0 |172.658857 |110.322581
|90.253521 |108.0

|21 |91.267606 |54.000000 |91.267606 |72.0 |171.929576 |109.451613
|91.267606 |108.0

|22 |92.281690 |54.000000 |92.281690 |72.0 |171.178544 |108.580645
|92.281690 |108.0

|23 |93.295775 |54.000000 |93.295775 |72.0 |170.407573 |107.709677
|93.295775 |108.0

|24 |94.309859 |54.000000 |94.309859 |72.0 |169.618475 |106.838710
|94.309859 |108.0

|25 |95.323944 |54.000000 |95.323944 |72.0 |168.813064 |105.967742
|95.323944 |108.0

|26 |96.338028 |54.000000 |96.338028 |72.0 |167.993152 |105.096774
|96.338028 |108.0

|27 |97.352113 |54.000000 |97.352113 |72.0 |167.160552 |104.225806
|97.352113 |108.0

|28 |98.366197 |54.000000 |98.366197 |72.0 |166.317076 |103.354839
|98.366197 |108.0

|29 |99.380282 |54.000000 |99.380282 |72.0 |165.464536 |102.483871
|99.380282 |108.0

|... |... |... |... |... |... |... |... |...

|172 |180.000000 |132.591549 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|173 |180.000000 |133.605634 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|174 |180.000000 |134.619718 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|175 |180.000000 |135.633803 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|176 |180.000000 |136.647887 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|177 |180.000000 |137.661972 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|178 |180.000000 |138.676056 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|179 |180.000000 |139.690141 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|180 |180.000000 |140.704225 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|181 |180.000000 |141.718310 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|182 |180.000000 |142.732394 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|183 |180.000000 |143.746479 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|184 |180.000000 |144.760563 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|185 |180.000000 |145.774648 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|186 |180.000000 |146.788732 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|187 |180.000000 |147.802817 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|188 |180.000000 |148.816901 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|189 |180.000000 |149.830986 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|190 |180.000000 |150.845070 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|191 |180.000000 |151.859155 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|192 |180.000000 |152.873239 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|193 |180.000000 |153.887324 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|194 |180.000000 |154.901408 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|195 |180.000000 |155.915493 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|196 |180.000000 |156.929577 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|197 |180.000000 |157.943662 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|198 |180.000000 |158.957746 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|199 |180.000000 |159.971831 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|200 |180.000000 |160.985915 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0

|201 |180.000000 |162.000000 |0.000000 |0.0 |0.000000 |0.000000
|0.000000 |0.0
|===

202 rows × 8 columns
----


+*In[ ]:*+
[source, ipython3]
----
# Pythonの文字列フォーマット（formatメソッドの使い方）
# https://gammasoft.jp/blog/python-string-format/
----


+*In[ ]:*+
[source, ipython3]
----

----
